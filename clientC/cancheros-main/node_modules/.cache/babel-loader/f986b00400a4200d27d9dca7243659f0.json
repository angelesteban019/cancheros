{"ast":null,"code":"import { createElementHook, createElementObject, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport const useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n  const {\n    attributes,\n    bounds,\n    ...options\n  } = props;\n  const container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (attributes != null) {\n    Object.keys(attributes).forEach(name => {\n      container.setAttribute(name, attributes[name]);\n    });\n  }\n\n  const overlay = new LeafletSVGOverlay(container, bounds, options);\n  return createElementObject(overlay, context, container);\n}, updateMediaOverlay);\nexport const useSVGOverlay = createLayerHook(useSVGOverlayElement);\n\nfunction SVGOverlayComponent(_ref, forwardedRef) {\n  let {\n    children,\n    ...options\n  } = _ref;\n  const {\n    instance,\n    container\n  } = useSVGOverlay(options).current;\n  useImperativeHandle(forwardedRef, () => instance);\n  return container == null || children == null ? null : /*#__PURE__*/createPortal(children, container);\n}\n\nexport const SVGOverlay = /*#__PURE__*/forwardRef(SVGOverlayComponent);","map":{"version":3,"sources":["C:/Users/Angel Esteban A/Desktop/cancherosAPP/clientC/cancheros-main/node_modules/react-leaflet/lib/SVGOverlay.js"],"names":["createElementHook","createElementObject","createLayerHook","updateMediaOverlay","SVGOverlay","LeafletSVGOverlay","forwardRef","useImperativeHandle","createPortal","useSVGOverlayElement","createSVGOverlay","props","context","attributes","bounds","options","container","document","createElementNS","setAttribute","Object","keys","forEach","name","overlay","useSVGOverlay","SVGOverlayComponent","forwardedRef","children","instance","current"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,kBAAlE,QAA4F,qBAA5F;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,SAAhD;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,OAAhD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAO,MAAMC,oBAAoB,GAAGT,iBAAiB,CAAC,SAASU,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AAC5F,QAAM;AAAEC,IAAAA,UAAF;AAAeC,IAAAA,MAAf;AAAwB,OAAGC;AAA3B,MAAuCJ,KAA7C;AACA,QAAMK,SAAS,GAAGC,QAAQ,CAACC,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAlB;AACAF,EAAAA,SAAS,CAACG,YAAV,CAAuB,OAAvB,EAAgC,4BAAhC;;AACA,MAAIN,UAAU,IAAI,IAAlB,EAAwB;AACpBO,IAAAA,MAAM,CAACC,IAAP,CAAYR,UAAZ,EAAwBS,OAAxB,CAAiCC,IAAD,IAAQ;AACpCP,MAAAA,SAAS,CAACG,YAAV,CAAuBI,IAAvB,EAA6BV,UAAU,CAACU,IAAD,CAAvC;AACH,KAFD;AAGH;;AACD,QAAMC,OAAO,GAAG,IAAInB,iBAAJ,CAAsBW,SAAtB,EAAiCF,MAAjC,EAAyCC,OAAzC,CAAhB;AACA,SAAOd,mBAAmB,CAACuB,OAAD,EAAUZ,OAAV,EAAmBI,SAAnB,CAA1B;AACH,CAXoD,EAWlDb,kBAXkD,CAA9C;AAYP,OAAO,MAAMsB,aAAa,GAAGvB,eAAe,CAACO,oBAAD,CAArC;;AACP,SAASiB,mBAAT,OAAwDC,YAAxD,EAAsE;AAAA,MAAzC;AAAEC,IAAAA,QAAF;AAAa,OAAGb;AAAhB,GAAyC;AAClE,QAAM;AAAEc,IAAAA,QAAF;AAAab,IAAAA;AAAb,MAA4BS,aAAa,CAACV,OAAD,CAAb,CAAuBe,OAAzD;AACAvB,EAAAA,mBAAmB,CAACoB,YAAD,EAAe,MAAIE,QAAnB,CAAnB;AACA,SAAOb,SAAS,IAAI,IAAb,IAAqBY,QAAQ,IAAI,IAAjC,GAAwC,IAAxC,GAA+C,aAAcpB,YAAY,CAACoB,QAAD,EAAWZ,SAAX,CAAhF;AACH;;AACD,OAAO,MAAMZ,UAAU,GAAG,aAAcE,UAAU,CAACoB,mBAAD,CAA3C","sourcesContent":["import { createElementHook, createElementObject, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport const useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n    const { attributes , bounds , ...options } = props;\n    const container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    if (attributes != null) {\n        Object.keys(attributes).forEach((name)=>{\n            container.setAttribute(name, attributes[name]);\n        });\n    }\n    const overlay = new LeafletSVGOverlay(container, bounds, options);\n    return createElementObject(overlay, context, container);\n}, updateMediaOverlay);\nexport const useSVGOverlay = createLayerHook(useSVGOverlayElement);\nfunction SVGOverlayComponent({ children , ...options }, forwardedRef) {\n    const { instance , container  } = useSVGOverlay(options).current;\n    useImperativeHandle(forwardedRef, ()=>instance);\n    return container == null || children == null ? null : /*#__PURE__*/ createPortal(children, container);\n}\nexport const SVGOverlay = /*#__PURE__*/ forwardRef(SVGOverlayComponent);\n"]},"metadata":{},"sourceType":"module"}